# Example Nginx Configuration for Sunrise Server
# Place this file in /etc/nginx/sites-available/yourdomain.com

# Wildcard subdomain configuration for *.yourdomain.com
server {
    listen 443 ssl;
    server_name *.yourdomain.com yourdomain.com;
    
    # SSL Configuration (managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/yourdomain.com-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com-0001/privkey.pem;
    
    # Common proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Handle different subdomains
    location / {
        # Game client endpoints (osu.yourdomain.com)
        if ($host ~* ^osu\.yourdomain\.com$) {
            proxy_pass https://localhost:5147;
        }
        
        # API endpoints (api.yourdomain.com)
        if ($host ~* ^api\.yourdomain\.com$) {
            proxy_pass https://localhost:5147;
        }
        
        # Static assets (a.yourdomain.com, assets.yourdomain.com, etc.)
        if ($host ~* ^(a|assets|b|c|c4|cho)\.yourdomain\.com$) {
            proxy_pass https://localhost:5147;
        }
        
        # Uptime Kuma monitoring (uptime.yourdomain.com)
        if ($host ~* ^uptime\.yourdomain\.com$) {
            proxy_pass http://localhost:3001;
        }
        
        # Default - Main domain (yourdomain.com) - Sunset frontend
        proxy_pass http://localhost:3090;
    }
}

# HTTP to HTTPS redirect (managed by Certbot)
server {
    listen 80;
    server_name *.yourdomain.com yourdomain.com;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# ============================================================================
# SETUP INSTRUCTIONS
# ============================================================================

# 1. DNS SETUP (in your domain provider like Namecheap, Cloudflare, etc.)
# ============================================================================
# Add these DNS records:
#
# Type: A Record
# Host: * (wildcard)
# Value: YOUR_SERVER_IP
# TTL: Automatic
#
# This will cover all subdomains:
# - yourdomain.com (main domain)
# - osu.yourdomain.com (game client)
# - api.yourdomain.com (API endpoints)
# - a.yourdomain.com (avatars)
# - assets.yourdomain.com (static assets)
# - uptime.yourdomain.com (monitoring)
# - etc.

# 2. SSL CERTIFICATE SETUP
# ============================================================================
# Generate wildcard SSL certificate:
# sudo certbot certonly --manual --preferred-challenges=dns -d yourdomain.com -d *.yourdomain.com
#
# Follow the DNS challenge instructions to add TXT record
# Then install certificate:
# sudo certbot install --cert-name yourdomain.com-0001

# 3. DOCKER COMPOSE SETUP
# ============================================================================
# Make sure your docker-compose.yml has these port mappings:
# - "5147:443" (HTTPS - Sunrise backend)
# - "5148:80" (HTTP - Sunrise backend)
# - "3090:3000" (Sunset frontend)
# - "3001:3001" (Uptime Kuma)

# 4. NGINX SETUP
# ============================================================================
# 1. Copy this config to /etc/nginx/sites-available/yourdomain.com
# 2. Replace 'yourdomain.com' with your actual domain
# 3. Create symlink: sudo ln -s /etc/nginx/sites-available/yourdomain.com /etc/nginx/sites-enabled/
# 4. Test config: sudo nginx -t
# 5. Reload nginx: sudo systemctl reload nginx

# 5. FLOW EXPLANATION
# ============================================================================
# 1. Game client connects to osu.yourdomain.com -> Sunrise backend
# 2. View profile redirects to yourdomain.com/user/ID -> Sunset frontend
# 3. API calls go to api.yourdomain.com -> Sunrise backend
# 4. Static assets from a.yourdomain.com -> Sunrise backend
# 5. Monitoring at uptime.yourdomain.com -> Uptime Kuma

# 6. TROUBLESHOOTING
# ============================================================================
# - Check nginx logs: sudo tail -f /var/log/nginx/error.log
# - Check Sunrise logs: docker logs osu-sunrise-sunrise-1
# - Check Sunset logs: docker logs osu-sunset-next-frontend-1
# - Test SSL: curl -I https://yourdomain.com
# - Test subdomain: curl -I https://osu.yourdomain.com 